#!/usr/bin/env python
"""
 Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.

 Licensed under the Apache License, Version 2.0 (the "License").
 You may not use this file except in compliance with the License.
 A copy of the License is located at

  http://aws.amazon.com/apache2.0

 or in the "license" file accompanying this file. This file is distributed
 on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 express or implied. See the License for the specific language governing
 permissions and limitations under the License.
"""

import math
import time
import rospy
from std_msgs.msg import Header
from geometry_msgs.msg import Twist
from ros_monitoring_msgs.msg import MetricList, MetricData, MetricDimension
from nav_msgs.msg import Odometry

class Monitor():
    def __init__(self, data_topic, data_msg, metric_topic, transform):
        self.metrics_pub = rospy.Publisher(metric_topic, MetricList, queue_size=1)
        self.topic_sub = rospy.Subscriber(data_topic, data_msg, self.callback)
        self.transform = transform

    def callback(self, message):
        self.metrics_pub.publish(self.transform(message))
    

def odom_to_speed(odom):
    header = Header()
    header.stamp = rospy.Time.from_sec(time.time())
    
    dimension = MetricDimension(name="Robot",
                                value="Turtlebot3")
    metric = MetricData(header=header,
                        metric_name="angular_speed",
                        unit=MetricData.UNIT_NONE,
                        value=odom.twist.twist.angular.z,
                        time_stamp=rospy.Time.from_sec(time.time()),
                        dimensions=[dimension])
    metric_message = MetricList([metric])
    return metric_message

def main():
    rospy.init_node('speed_monitor')
    monitor = Monitor(data_topic="/odom",
                      data_msg=Odometry,
                      metric_topic="/metrics",
                      transform=odom_to_speed)
    rospy.spin()

if __name__ == '__main__':
    main()

